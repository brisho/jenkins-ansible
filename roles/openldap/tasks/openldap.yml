---

- name: Install OpenLDAP packages
  yum: pkg={{ item }} state=latest
  with_items:
      - openldap-clients
      - openldap-servers

- name: Check if LDAPS is enabled
  command: '/usr/bin/grep SLAPD_URLS /etc/sysconfig/slapd'
  register: ldaps_enabled
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Enable LDAPS
  lineinfile: dest=/etc/sysconfig/slapd
      regexp='^SLAPD_URLS=.*'
      line='SLAPD_URLS="ldapi:/// ldaps:/// ldap:///"'
  notify: Restart slapd
  when: '"ldaps:///" not in ldaps_enabled.stdout'

- name: Ensure OpenLDAP server is running
  service: name=slapd
      enabled=yes
      state=started

- name: Check if admin password is present
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep olcRootPW:
  register: ldap_admin_password_set
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Generate admin password hash
  shell: 'echo -n "{{ slapd_admin_password }}" | /usr/sbin/slappasswd -h "{SSHA}" -T /dev/fd/0'
  register: ldap_passwd
  failed_when: 1 == 0
  changed_when: 1 == 0
  when: '"olcRootPW:" not in ldap_admin_password_set.stdout'

- name: Copy LDIF for initializing LDAP database
  template: src=db.modify.ldif
      dest='{{ slapd_dir }}/db.modify.ldif'
  when: '"olcRootPW:" not in ldap_admin_password_set.stdout'

- name: Initialize LDAP database
  command: /usr/bin/ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/db.modify.ldif
  when: '"olcRootPW:" not in ldap_admin_password_set.stdout'

- name: Check if core schema is installed
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep "core,cn=schema,cn=config"
  register: ldap_core_schema
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Install core schema
  command: /usr/bin/ldapadd -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/schema/core.ldif
  when: '"core" not in ldap_core_schema.stdout'

- name: Check if cosine schema is installed
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep "cosine,cn=schema,cn=config"
  register: ldap_cosine_schema
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Install cosine schema
  command: /usr/bin/ldapadd -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/schema/cosine.ldif
  when: '"cosine" not in ldap_cosine_schema.stdout'

- name: Check if inetorgperson schema is installed
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep "inetorgperson,cn=schema,cn=config"
  register: ldap_inetorgperson_schema
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Install inetorgperson schema
  command: /usr/bin/ldapadd -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/schema/inetorgperson.ldif
  when: '"inetorgperson" not in ldap_inetorgperson_schema.stdout'

- name: Check if memberOf overlay is installed
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep "memberof.la"
  register: ldap_memberof_overlay
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Copy LDIF for memberOf overlay
  copy: src=backend.memberof.ldif
      dest='{{ slapd_dir }}/backend.memberof.ldif'
  when: '"olcModuleLoad:" not in ldap_memberof_overlay.stdout'

- name: Enable memberOf overlay
  command: /usr/bin/ldapadd -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/backend.memberof.ldif
  when: '"olcModuleLoad:" not in ldap_memberof_overlay.stdout'

- name: Check if referential integrity overlay is installed
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep "refint.la"
  register: ldap_refint_overlay
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Copy LDIF for referential integrity overlay
  copy: src=backend.refint.ldif
      dest='{{ slapd_dir }}/backend.refint.ldif'
  when: '"olcModuleLoad:" not in ldap_refint_overlay.stdout'

- name: Enable referential integrity overlay
  command: /usr/bin/ldapadd -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/backend.refint.ldif
  when: '"olcModuleLoad:" not in ldap_refint_overlay.stdout'

- name: Check if remote access is already configured
  shell: '/usr/sbin/slapcat -n0 | /usr/bin/grep "olcRootDN: cn=admin,cn=config"'
  register: ldap_remote_access
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Copy LDIF for remote access
  template: src=backend.remote_access.ldif
      dest='{{ slapd_dir }}/backend.remote_access.ldif'
  when: '"olcRootDN:" not in ldap_remote_access.stdout'

- name: Enable remote access
  command: /usr/bin/ldapadd -Y EXTERNAL -H ldapi:/// -f {{ slapd_dir }}/backend.remote_access.ldif
  when: '"olcRootDN:" not in ldap_remote_access.stdout'

- name: Check if local schema changes have been loaded
  shell: /usr/sbin/slapcat -n0 | /usr/bin/grep "local,cn=schema,cn=config"
  register: ldap_local_schema
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Copy local schema changes
  copy: src=schema.local.ldif
      dest={{ slapd_dir }}/schema.local.ldif
  when: '"local" not in ldap_local_schema.stdout'

- name: Activate local schema changes
  command: '/usr/bin/ldapadd -H ldapi:/// -D cn=admin,cn=config -w {{ slapd_admin_password }} -f {{ slapd_dir }}/schema.local.ldif'
  when: '"local" not in ldap_local_schema.stdout'
  notify: Restart slapd

- name: Check if LDAP DIT is initialized
  shell: '/usr/bin/ldapsearch -xLLL -H ldapi:/// -b {{ slapd_basedn }} -D cn=admin,{{ slapd_basedn }} -w {{ slapd_admin_password }} "(objectClass=dcObject)" | /usr/bin/grep "dn: {{ slapd_basedn }}"'
  register: ldap_dit_initialized
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Copy LDIF for DIT initialization
  template: src=dit.init.ldif
      dest='{{ slapd_dir }}/dit.init.ldif'
  when: '"{{ slapd_basedn }}" not in ldap_dit_initialized.stdout'

- name: Initialize the DIT
  command: /usr/bin/ldapadd -x -H ldapi:/// -D cn=admin,{{ slapd_basedn }} -w {{ slapd_admin_password }} -f {{ slapd_dir }}/dit.init.ldif
  when: '"{{ slapd_basedn }}" not in ldap_dit_initialized.stdout'

- name: Check if ldapuser is present
  shell: '/usr/bin/ldapsearch -xLLL -H ldapi:/// -D cn=admin,{{ slapd_basedn }} -w {{ slapd_admin_password }} -b {{ slapd_basedn }} "(uid=ldapuser)" | /usr/bin/grep "uid: "'
  register: ldapuser_present
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Force slapd restart
  command: /usr/bin/systemctl restart slapd
  when: '"uid: " not in ldapuser_present.stdout'

- name: Copy new users LDIF
  copy: src=new_users.ldif
      dest='{{ slapd_dir }}/new_users.ldif'
  when: '"uid: " not in ldapuser_present.stdout'

- name: Add new users
  shell: /usr/bin/ldapadd -x -H ldapi:/// -D cn=admin,{{ slapd_basedn }} -w {{ slapd_admin_password }} -f {{ slapd_dir }}/new_users.ldif
  when: '"uid: " not in ldapuser_present.stdout'

- name: Check if everyone group is present
  shell: '/usr/bin/ldapsearch -xLLL -H ldapi:/// -D cn=admin,{{ slapd_basedn }} -w {{ slapd_admin_password }} -b {{ slapd_basedn }} "(cn=Everyone)" | /usr/bin/grep "cn: Everyone"'
  register: ldapgroup_present
  failed_when: 1 == 0
  changed_when: 1 == 0

- name: Copy new groups LDIF
  copy: src=new_groups.ldif
      dest='{{ slapd_dir }}/new_groups.ldif'
  when: '"Everyone" not in ldapgroup_present.stdout'

- name: Add new groups
  shell: /usr/bin/ldapadd -x -H ldapi:/// -D cn=admin,{{ slapd_basedn }} -w {{ slapd_admin_password }} -f {{ slapd_dir }}/new_groups.ldif
  when: '"Everyone" not in ldapgroup_present.stdout'
